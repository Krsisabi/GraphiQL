{
  "en": {
    "welcome": "Welcome to GraphiQL!",
    "welcomeLink": "Welcome",
    "signin": "Sign In",
    "signup": "Sign Up",
    "signout": "Sign Out",
    "404": "Page not found",
    "settings": "Settings",
    "applicationDevelopers": "Application Developers",
    "languageSetting": "Language",
    "languageSettingDescription": "Choose the current language of the App",
    "themeSetting": "Theme",
    "themeSettingDescription": "Adjust how the interface looks like",
    "languageToggle": [
      {
        "name": "En",
        "value": "en"
      },
      {
        "name": "Ru",
        "value": "ru"
      }
    ],
    "themeToggle": [
      { "name": "Dark", "value": "dark" },
      { "name": "Light", "value": "light" }
    ],
    "submit": "Submit",
    "placeholders": ["Enter Email", "Enter Password", "Confirm Password"],
    "variables": "Variables",
    "headers": "Headers",
    "endpoint": "Endpoint",
    "projectInfo": [
      "Our platform provides you with unique opportunities to interact with GraphQL API. Here, you can easily experiment with various endpoints, input queries, manage variables and headers, and then enjoy the results of your efforts.",

      "GraphiQL Playground is designed with your comfort and understanding in mind. We offer an intuitive interface that will make exploring the power of GraphQL a breeze. Your queries will become simpler, and the results more accessible.",

      "Join us, and let's uncover the magic of GraphQL together. GraphiQL Playground is your reliable partner in learning and utilizing GraphQL API. Enjoy the journey through GraphQL functionality with ease and pleasure!"
    ],
    "schema": {
      "email": {
        "required": "Email is required",
        "email": "Email must be valid (example@mail.com)"
      },
      "password": {
        "required": "Password is required",
        "whitespace": "Password must not contain spaces",
        "uppercase": "Password must contain at least one uppercase letter",
        "lowercase": "Password must contain at least one lowercase letter",
        "number": "Password must contain at least one number",
        "symbol": "Password must contain at least one special character",
        "length": "Password must be at least 8 characters"
      },
      "confirm": {
        "required": "Confirm password is required",
        "match": "Passwords must match"
      }
    },
    "notifications": {
      "signinFailed": {
        "title": "Login Failed!",
        "text": "Please, recheck the email and password and try again"
      },
      "signupFailed": {
        "title": "Signup Failed!",
        "text": "Maybe you’re already registered.\nPlease, recheck your data and try again"
      },
      "prettifyingFailed": {
        "title": "Prettifying Failed!",
        "textClosingParenthesis": "Extra closing parenthesis detected",
        "textOpeningParenthesis": "Extra opening parenthesis detected"
      },
      "fetchingFailed": {
        "title": "Fetching Error",
        "text": "Failed to fetch data. \nCheck your data and try again"
      },
      "requestFailed": {
        "title": "Invalid Request!",
        "textVariables": "Please ensure that the variable editor contains the correct brackets and syntax.",
        "textHeaders": "Please ensure that the header editor contains the correct brackets and syntax."
      }
    },
    "documentationExplorer": "Documentation Explorer",
    "tooltip": {
      "docs": "Documentation",
      "play": "Execute query",
      "prettify": "Prettify"
    },
    "docs": {
      "rootType": "Root Types",
      "desc": "A GraphQL schema provides a root type for each kind of operation",
      "noDesc": "No description",
      "kind": "Kind",
      "back": "Back to",
      "schema": "Schema"
    }
  },
  "ru": {
    "welcome": "Добро пожаловать в GraphiQL!",
    "welcomeLink": "Домой",
    "signin": "Вход",
    "signup": "Регистрация",
    "signout": "Выход",
    "404": "Страница не найдена",
    "settings": "Настройки",
    "languageSetting": "Язык",
    "languageSettingDescription": "Выберите текущий язык приложения",
    "themeSetting": "Тема",
    "themeSettingDescription": "Настройте как будет выглядеть интерфейс",
    "languageToggle": [
      {
        "name": "Англ",
        "value": "en"
      },
      {
        "name": "Рус",
        "value": "ru"
      }
    ],
    "themeToggle": [
      { "name": "Темная", "value": "dark" },
      { "name": "Светлая", "value": "light" }
    ],
    "submit": "Отправить",
    "placeholders": ["Введите Эл. почту", "Введите Пароль", "Повторите Пароль"],
    "variables": "Переменные",
    "headers": "Заголовки",
    "endpoint": "Конечная точка",
    "error": "Неправильная конечная точка",
    "projectInfo": [
      "Платформа предоставляет вам уникальные возможности взаимодействия с GraphQL API. Здесь вы можете легко экспериментировать с различными конечными точками, вводить запросы, управлять переменными и заголовками, а затем наслаждаться результатами вашего труда.",

      "Присоединяйтесь к нам, и давайте вместе раскроем всю магию GraphQL. GraphiQL Playground - это ваш надежный партнер в изучении и использовании GraphQL API. Наслаждайтесь путешествием по функциональности GraphQL с легкостью и удовольствием!",

      "Создано при поддержке The Rolling Scopes School, этот проект с гордостью выражает благодарность за поддержку от RS School - ведущего учебного заведения, предоставляющего образовательные программы, ориентированные на разработчиков, абсолютно бесплатно. Проект является завершением курса по React."
    ],
    "schema": {
      "email": {
        "required": "Требуется электронная почта",
        "email": "Невалидная эл. почта (example@mail.com)"
      },
      "password": {
        "required": "Требуется пароль",
        "whitespace": "Пароль не должен содержать пробелы",
        "letter": "Пароль должен содержать минимум одну букву",
        "uppercase": "Пароль должен содержать минимум одну заглавную букву",
        "lowercase": "Пароль должен содержать минимум одну строчную букву",
        "number": "Пароль должен содержать минимум одну цифру",
        "symbol": "Пароль должен содержать хотя бы один символ",
        "length": "Пароль должен содержать минимум 8 символов"
      },
      "confirm": {
        "required": "Требуется подтверждение пароля",
        "match": "Пароли должны совпадать"
      }
    },
    "notifications": {
      "signinFailed": {
        "title": "Не удалось войти!",
        "text": "Пожалуйста, проверьте данные и попробуйте снова"
      },
      "signupFailed": {
        "title": "Ошибка регистрации!",
        "text": "Возможно, вы уже зарегистрированы.\nПожалуйста, проверьте данные и попробуйте снова"
      },
      "prettifyingFailed": {
        "title": "Ошибка форматирования!",
        "textClosingParenthesis": "Обнаружена лишняя закрывающая скобка",
        "textOpeningParenthesis": "Обнаружена лишняя открывающая скобка"
      },
      "fetchingFailed": {
        "title": "Ошибка запроса",
        "text": "Ошибка получения данных. Проверьте данные и повторите попытку"
      },
      "requestFailed": {
        "title": "Запрос неверен!",
        "textVariables": "Пожалуйста, убедитесь, что редактор переменных содержит правильные скобки и синтаксис.",
        "textHeaders": "Пожалуйста, убедитесь, что редактор заголовков содержит правильные скобки и синтаксис."
      }
    },
    "documentationExplorer": "Обозреватель документации",
    "tooltip": {
      "docs": "Документация",
      "play": "Выполнить запрос",
      "prettify": "Форматировать"
    },
    "docs": {
      "rootType": "Корневые типы",
      "desc": "GraphQL-схема предоставляет корневой тип для каждого вида операции",
      "noDesc": "Нет описания",
      "kind": "Тип",
      "back": "Назад к",
      "schema": "Schema"
    }
  }
}
